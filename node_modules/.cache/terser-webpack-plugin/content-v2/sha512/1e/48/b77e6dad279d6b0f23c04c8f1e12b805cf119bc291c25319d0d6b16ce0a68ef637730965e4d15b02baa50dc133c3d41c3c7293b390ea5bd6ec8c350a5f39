{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{192:function(t,e,a){\"use strict\";a.r(e);var l=a(8),c=(a(24),a(5)),i=(a(185),a(184));e.default=class extends i.a{constructor(t){const e=\"defaultValue\"in t&&t.defaultValue;for(var a=arguments.length,i=new Array(a>1?a-1:0),s=1;s<a;s++)i[s-1]=arguments[s];super(Object(l.a)({},t,{defaultValue:e}),...i),Object(c.a)(this,\"serialize\",t=>!!t[this.path]),Object(c.a)(this,\"deserialize\",t=>!!t[this.path]),Object(c.a)(this,\"getFilterGraphQL\",t=>{let e=t.type,a=t.value;const l=\"is\"===e?\"\".concat(this.path):\"\".concat(this.path,\"_\").concat(e);return\"\".concat(l,\": \").concat(a)}),Object(c.a)(this,\"getFilterLabel\",t=>{let e=t.label;return\"\".concat(this.label,\" \").concat(e.toLowerCase())}),Object(c.a)(this,\"formatFilter\",t=>{let e=t.label,a=t.value;return\"\".concat(this.getFilterLabel({label:e}),': \"').concat(a,'\"')}),Object(c.a)(this,\"getFilterTypes\",()=>[{type:\"is\",label:\"Is\",getInitialValue:()=>\"true\"},{type:\"not\",label:\"Is not\",getInitialValue:()=>\"true\"}])}}}}]);","extractedComments":[]}